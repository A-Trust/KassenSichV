<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAAAQAAAgICAAIDAgAEBAQABAUEAAYGBgAGBwYACEcGAAhICEAISQhACkoKQApLCkAMTAxADE0
        MQA5ODkAOTw5AEI8OQBCPEIAQkFCAEJFQgBCSUIASklKAEpNSgBSTUoAUlFSAFJVUgBaVVIAWllaAFpd
        WgBjZWMAa2VjAGttawBzcXMAc3VzAHt1cwB7dXsAe317ABgYvQA5OK0AOTytACEgvQAhJL0AMTC1ADE0
        vQA5NL0AOTi9AHNtnABrcZwAe32UAHNxnABzdZwAe32cAEJBrQBKSa0ASk2tAFpZpQBCRbUAUk29AGNd
        rQBjYaUAY2WlAHNxrQAAAMYAAATGAAgIxgAAAM4AAATOAAgEzgAACM4ACAjOAAgMzgAQDM4AEBDGABAU
        xgAYHMYAEBDOABAUzgAQGM4AGBjOABgczgAhIM4AISTOACkkzgAxNMYAISDWACEk1gApKNYAKSzWADEw
        1gAxNNYAOTjWADk81gBSUcYAQkHWAEJF1gBCSdYASknWAEpJ3gBKTd4AUk3eAFJR3gBSVd4AWlXeAFpZ
        3gBaXd4AWmHOAFph3gBrbcYAe33GAGNl1gBjYd4Aa2neAGtt5wBzcecAc3XnAHN55wB7eecAe33nAISC
        hACEhoQAhIaMAIyKjACMjowAhIKUAISGlACMipQAjI6UAISGnACMipwAjJKUAJSSlACUlpQAnJqcAJye
        nACcopwAjIqtAJSWvQCcoqUApaKlAKWmpQCtpqUApaqlAKWqrQCtqq0Ara6tALWutQC1srUAtba1AL22
        tQC9urUAtbK9ALW6vQC9ur0Avb69AMa+vQCEgtYAjI7eAISC5wCEhucAhIrnAIyK5wCMjucAlJbvAJyW
        7wCcmu8AnJ7vAJyi7wClou8ApabvAK2m7wCtru8ArbLvALWy7wC1tu8AvbrvAL2+7wC1svcAtbb3AL26
        9wC9w8YAxsPGAMbHxgDGy8YAzsvGAM7LzgDOz84AxsfWAMbH3gDW09YA1tfWAN7b3gDe394A5+PeAM7P
        7wDe1+cA1tPvAMbH9wDOy/cAzs/3ANbT9wDW1/cA1tv3AN7b9wDe3/cA3tv/AN7f/wDe4+cA5+PnAOfn
        5wDn4+8A7+fvAOfr7wDv6+8A7+/vAOfj9wDn5/cA5+P/AOfn/wDn6/8A7+v/AO/v/wD37/cA9/P3APf3
        9wD38/8A9/f/APf7/wD/+/8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAubi1m5iTjIV6JSAeHR0ZGBYVFBQQDw4MCgoGBQUDAQG1wNXV0L+5mpCFgnp4eHd4eHh6g4WM
        kJOTk5OTkJAiAbTV5eXe0bmXiD49PTw8LzSDg4WMk7S90NXg5eXl5ZADmtTl3tS+iTpLQUJCQj9JKjYz
        g4OHkJq50Nbl5eXlkAWT0eXevGxJP0JCQkJCQkI/P0koMH+DjJO5v9Xg5eWTBZPQ3tRqSEJCP0JCQkJC
        QkJCQj8mOH2DjJO5wdbl5ZMGkNDenUZCQkJCQkJCQkJCQkJCQkI/KzGDjJO5v97lkwqMv8JbQj8/QkJC
        QkJCQld1nlo/QkJCKzGDjJq51eCTCoXAn0ZbrqNNP0JCQkI/dOXlxlI/QkJCKn2Djpq/1pMMhL9fQmbZ
        4XI/QkJCQj9o2+XlckZCQkJCNX+FkLnQkw56vkY/Tanl21tCQkJCQk2l5eXJWkJCQkJBN4OMmr6SEHi9
        Qj9CX+Xlqk9CQkJCQlrh5d1vQkJCQkJJNIWTuZAUJb1CQj9EnuHhnz8/P0I/QqXi5a5CQkJCQkI1gYya
        jBQjvUJCQld12eXZZl9fV1JWZt3l200/QkJCQiYzhZOKFiC6RUJPs+Xl5eXl4eHLycnG4eXio2RORkJC
        PyiFkIcZH7lXQk+s4eHl5eXl5eXl5eXl5eXh2a9yTkRCKYCNhR0duXBGQkJWV57d5eGkoaiursbl5eXl
        5eXdpVlJO4yFHRm2qU1CQkJCT6Tl5WhGRkZGWsnl2K7Z5eXixmg5jIUeFrbLX0JCQkJCT8Xly2M/QkI/
        p+XGWlpyxdnhriyMjCAWteWiQkJCQkI/ZtjlsUZCQj9x3dlmP0ZTYHVmLI+MIhKa5dtaQkJCQkJCaOHl
        n0ZCP1fH5XU/QkJCPz8tkJAlEJrl5aJNP0JCP0JGquXMYUJCTqrlqURCQkJCQi2ak3kNmuXl3XFCQkJC
        Qj9TruXOV0JGceXKUkJCQkI/Xba2gwuW5eXly1dCQkJCQkJb2eWqVj9b5eFbQkI/QkltvrqHCpPl5eXl
        xltCQj9CQj9mzuWyT1Dl5V8/QkJCVLvRv4wIk+Xl5eXlxVdCQkJCQkZo4eKpa+XlaEJCQk2c0N7PkAWT
        5eXl5eXlymhGQkJCQkJnyeXh5eVkQkJCbsPg5dGUBZPl5eXl5eXl2XVYQkJCQkRfs9nhx1c/QlvE3uXl
        0ZoDkOXl5eXl5eXl5c6eWkZCQj9GW2FPRlKi2OXl5eXVmgOQ5eXl5eXl5eXl5eHJomNPQkI/QlZ0r+Ll
        5eXl5dW1ASKQkJOTk5OWmpqatbW1ubq6vb6+v8DA0NDQ0NXVv7kBAQMDBQUGCgsNDxEWFhsdHiAlJXh7
        hIeMkJOTmrW2uQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>